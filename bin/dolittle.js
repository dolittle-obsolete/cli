#!/usr/bin/env node
'use strict';

var _args = require('args');

var _args2 = _interopRequireDefault(_args);

var _global = require('./global');

var _global2 = _interopRequireDefault(_global);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_args2.default.command('update', 'Update all artifacts', function () {
    _global2.default.boilerPlatesManager.update();
}).command('cluster', 'Work with cluster hosting Dolittle').command('create', 'Create something from one of the boilerplates');

_args2.default.parse(process.argv);
var showHelpIfNeeded = function showHelpIfNeeded() {
    if (!_args2.default.sub.length) _args2.default.showHelp();
};

if (_global2.default.configManager.isFirstRun || !_global2.default.boilerPlatesManager.hasBoilerPlates) {
    if (_global2.default.configManager.isFirstRun) _global2.default.logger.info('This is the first time you run this tool, hang on tight while we get it ready');else _global2.default.logger.info('There are no boiler plates, hang on tight while we get it ready');
    _global2.default.boilerPlatesManager.update().then(function () {
        console.log('\n');
        showHelpIfNeeded();
    });
} else {
    showHelpIfNeeded();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL1NvdXJjZS9kb2xpdHRsZS5qcyJdLCJuYW1lcyI6WyJhcmdzIiwiY29tbWFuZCIsImdsb2JhbCIsImJvaWxlclBsYXRlc01hbmFnZXIiLCJ1cGRhdGUiLCJwYXJzZSIsInByb2Nlc3MiLCJhcmd2Iiwic2hvd0hlbHBJZk5lZWRlZCIsInN1YiIsImxlbmd0aCIsInNob3dIZWxwIiwiY29uZmlnTWFuYWdlciIsImlzRmlyc3RSdW4iLCJoYXNCb2lsZXJQbGF0ZXMiLCJsb2dnZXIiLCJpbmZvIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUFBLGVBQ0tDLE9BREwsQ0FDYSxRQURiLEVBQ3VCLHNCQUR2QixFQUMrQyxZQUFNO0FBQzdDQyxxQkFBT0MsbUJBQVAsQ0FBMkJDLE1BQTNCO0FBQ0gsQ0FITCxFQUlLSCxPQUpMLENBSWEsU0FKYixFQUl3QixvQ0FKeEIsRUFLS0EsT0FMTCxDQUthLFFBTGIsRUFLdUIsK0NBTHZCOztBQU9BRCxlQUFLSyxLQUFMLENBQVdDLFFBQVFDLElBQW5CO0FBQ0EsSUFBSUMsbUJBQW1CLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUN6QixRQUFJLENBQUNSLGVBQUtTLEdBQUwsQ0FBU0MsTUFBZCxFQUF1QlYsZUFBS1csUUFBTDtBQUMxQixDQUZEOztBQUlBLElBQUlULGlCQUFPVSxhQUFQLENBQXFCQyxVQUFyQixJQUFtQyxDQUFDWCxpQkFBT0MsbUJBQVAsQ0FBMkJXLGVBQW5FLEVBQXFGO0FBQ2pGLFFBQUlaLGlCQUFPVSxhQUFQLENBQXFCQyxVQUF6QixFQUFzQ1gsaUJBQU9hLE1BQVAsQ0FBY0MsSUFBZCxDQUFtQiwrRUFBbkIsRUFBdEMsS0FDS2QsaUJBQU9hLE1BQVAsQ0FBY0MsSUFBZCxDQUFtQixpRUFBbkI7QUFDTGQscUJBQU9DLG1CQUFQLENBQTJCQyxNQUEzQixHQUFvQ2EsSUFBcEMsQ0FBeUMsWUFBTTtBQUMzQ0MsZ0JBQVFDLEdBQVIsQ0FBWSxJQUFaO0FBQ0FYO0FBQ0gsS0FIRDtBQUlILENBUEQsTUFPTztBQUNIQTtBQUNIIiwiZmlsZSI6ImRvbGl0dGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgYXJncyBmcm9tICdhcmdzJztcbmltcG9ydCBnbG9iYWwgZnJvbSAnLi9nbG9iYWwnO1xuXG5hcmdzXG4gICAgLmNvbW1hbmQoJ3VwZGF0ZScsICdVcGRhdGUgYWxsIGFydGlmYWN0cycsICgpID0+IHtcbiAgICAgICAgZ2xvYmFsLmJvaWxlclBsYXRlc01hbmFnZXIudXBkYXRlKCk7XG4gICAgfSlcbiAgICAuY29tbWFuZCgnY2x1c3RlcicsICdXb3JrIHdpdGggY2x1c3RlciBob3N0aW5nIERvbGl0dGxlJylcbiAgICAuY29tbWFuZCgnY3JlYXRlJywgJ0NyZWF0ZSBzb21ldGhpbmcgZnJvbSBvbmUgb2YgdGhlIGJvaWxlcnBsYXRlcycpO1xuXG5hcmdzLnBhcnNlKHByb2Nlc3MuYXJndik7ICAgIFxubGV0IHNob3dIZWxwSWZOZWVkZWQgPSAoKSA9PiB7XG4gICAgaWYoICFhcmdzLnN1Yi5sZW5ndGggKSBhcmdzLnNob3dIZWxwKCk7XG59XG5cbmlmKCBnbG9iYWwuY29uZmlnTWFuYWdlci5pc0ZpcnN0UnVuIHx8ICFnbG9iYWwuYm9pbGVyUGxhdGVzTWFuYWdlci5oYXNCb2lsZXJQbGF0ZXMgKSB7XG4gICAgaWYoIGdsb2JhbC5jb25maWdNYW5hZ2VyLmlzRmlyc3RSdW4gKSBnbG9iYWwubG9nZ2VyLmluZm8oJ1RoaXMgaXMgdGhlIGZpcnN0IHRpbWUgeW91IHJ1biB0aGlzIHRvb2wsIGhhbmcgb24gdGlnaHQgd2hpbGUgd2UgZ2V0IGl0IHJlYWR5Jyk7XG4gICAgZWxzZSBnbG9iYWwubG9nZ2VyLmluZm8oJ1RoZXJlIGFyZSBubyBib2lsZXIgcGxhdGVzLCBoYW5nIG9uIHRpZ2h0IHdoaWxlIHdlIGdldCBpdCByZWFkeScpO1xuICAgIGdsb2JhbC5ib2lsZXJQbGF0ZXNNYW5hZ2VyLnVwZGF0ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnXFxuJyk7XG4gICAgICAgIHNob3dIZWxwSWZOZWVkZWQoKTtcbiAgICB9KTtcbn0gZWxzZSB7XG4gICAgc2hvd0hlbHBJZk5lZWRlZCgpO1xufSJdfQ==