'use strict';

var _a_system_that_can_find_an_artifact_template_for_csharp = require('./given/a_system_that_can_find_an_artifact_template_for_csharp');

describe('when_creating_an_artifact_with_a_core_in_csharp', function () {
    var context = new _a_system_that_can_find_an_artifact_template_for_csharp.a_system_that_can_find_an_artifact_template_for_csharp();
    var path = require('path');

    (function (beforeEach) {
        context.artifactsManager.createArtifact(context.context);
    })();

    it('should try getting bounded context configuration from the correct start path', function () {
        return context.boundedContextManager.getNearestBoundedContextConfig.should.be.calledWith(context.context.destination);
    });
    it('should try getting an artifacts boiler plate for csharp', function () {
        return context.boilerPlatesManager.boilerPlatesByLanguageAndType.should.be.calledWith(context.boilerPlateLanguage, context.boilerPlateType);
    });
    it('should try searching the file system from the location specified in the boilerplate', function () {
        return context.folders.searchRecursive.should.be.calledWith(context.boilerPlateLocation);
    });
    it('should try reading the file system from the location of the template file', function () {
        return context.fileSystem.readFileSync.should.be.calledWith(path.join(context.templateFileLocation, 'template.json'));
    });
    it('should call the inquirer to prompt the user given the correct information', function () {
        return context.inquirerManager.promptUser.should.be.calledWith(context.context.artifactName, context.context.destination, context.boilerPlate, JSON.parse(context.artifactTemplateJson));
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL1NvdXJjZS9hcnRpZmFjdHMvZm9yX0FydGlmYWN0c01hbmFnZXIvZm9yX2NyZWF0ZUFydGlmYWN0L3doZW5fY3JlYXRpbmdfYW5fYXJ0aWZhY3Rfd2l0aF9hX2JhY2tlbmRfaW5fY3NoYXJwLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiY29udGV4dCIsImFfc3lzdGVtX3RoYXRfY2FuX2ZpbmRfYW5fYXJ0aWZhY3RfdGVtcGxhdGVfZm9yX2NzaGFycCIsInBhdGgiLCJyZXF1aXJlIiwiYXJ0aWZhY3RzTWFuYWdlciIsImNyZWF0ZUFydGlmYWN0IiwiaXQiLCJib3VuZGVkQ29udGV4dE1hbmFnZXIiLCJnZXROZWFyZXN0Qm91bmRlZENvbnRleHRDb25maWciLCJzaG91bGQiLCJiZSIsImNhbGxlZFdpdGgiLCJkZXN0aW5hdGlvbiIsImJvaWxlclBsYXRlc01hbmFnZXIiLCJib2lsZXJQbGF0ZXNCeUxhbmd1YWdlQW5kVHlwZSIsImJvaWxlclBsYXRlTGFuZ3VhZ2UiLCJib2lsZXJQbGF0ZVR5cGUiLCJmb2xkZXJzIiwic2VhcmNoUmVjdXJzaXZlIiwiYm9pbGVyUGxhdGVMb2NhdGlvbiIsImZpbGVTeXN0ZW0iLCJyZWFkRmlsZVN5bmMiLCJqb2luIiwidGVtcGxhdGVGaWxlTG9jYXRpb24iLCJpbnF1aXJlck1hbmFnZXIiLCJwcm9tcHRVc2VyIiwiYXJ0aWZhY3ROYW1lIiwiYm9pbGVyUGxhdGUiLCJKU09OIiwicGFyc2UiLCJhcnRpZmFjdFRlbXBsYXRlSnNvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQUEsU0FBUyxpREFBVCxFQUE0RCxZQUFNO0FBQzlELFFBQUlDLFVBQVUsSUFBSUMsOEdBQUosRUFBZDtBQUNBLFFBQU1DLE9BQU9DLFFBQVEsTUFBUixDQUFiOztBQUVBLEtBQUMsc0JBQWM7QUFDWEgsZ0JBQVFJLGdCQUFSLENBQXlCQyxjQUF6QixDQUF3Q0wsUUFBUUEsT0FBaEQ7QUFDSCxLQUZEOztBQUlBTSxPQUFHLDhFQUFILEVBQW1GO0FBQUEsZUFBTU4sUUFBUU8scUJBQVIsQ0FBOEJDLDhCQUE5QixDQUE2REMsTUFBN0QsQ0FBb0VDLEVBQXBFLENBQXVFQyxVQUF2RSxDQUFrRlgsUUFBUUEsT0FBUixDQUFnQlksV0FBbEcsQ0FBTjtBQUFBLEtBQW5GO0FBQ0FOLE9BQUcseURBQUgsRUFBOEQ7QUFBQSxlQUFNTixRQUFRYSxtQkFBUixDQUE0QkMsNkJBQTVCLENBQTBETCxNQUExRCxDQUFpRUMsRUFBakUsQ0FBb0VDLFVBQXBFLENBQStFWCxRQUFRZSxtQkFBdkYsRUFBNEdmLFFBQVFnQixlQUFwSCxDQUFOO0FBQUEsS0FBOUQ7QUFDQVYsT0FBRyxxRkFBSCxFQUEwRjtBQUFBLGVBQU1OLFFBQVFpQixPQUFSLENBQWdCQyxlQUFoQixDQUFnQ1QsTUFBaEMsQ0FBdUNDLEVBQXZDLENBQTBDQyxVQUExQyxDQUFxRFgsUUFBUW1CLG1CQUE3RCxDQUFOO0FBQUEsS0FBMUY7QUFDQWIsT0FBRywyRUFBSCxFQUFnRjtBQUFBLGVBQU1OLFFBQVFvQixVQUFSLENBQW1CQyxZQUFuQixDQUFnQ1osTUFBaEMsQ0FBdUNDLEVBQXZDLENBQTBDQyxVQUExQyxDQUFxRFQsS0FBS29CLElBQUwsQ0FBVXRCLFFBQVF1QixvQkFBbEIsRUFBd0MsZUFBeEMsQ0FBckQsQ0FBTjtBQUFBLEtBQWhGO0FBQ0FqQixPQUFHLDJFQUFILEVBQWdGO0FBQUEsZUFBTU4sUUFBUXdCLGVBQVIsQ0FBd0JDLFVBQXhCLENBQW1DaEIsTUFBbkMsQ0FBMENDLEVBQTFDLENBQTZDQyxVQUE3QyxDQUF3RFgsUUFBUUEsT0FBUixDQUFnQjBCLFlBQXhFLEVBQXNGMUIsUUFBUUEsT0FBUixDQUFnQlksV0FBdEcsRUFBbUhaLFFBQVEyQixXQUEzSCxFQUF3SUMsS0FBS0MsS0FBTCxDQUFXN0IsUUFBUThCLG9CQUFuQixDQUF4SSxDQUFOO0FBQUEsS0FBaEY7QUFDSCxDQWJEIiwiZmlsZSI6IndoZW5fY3JlYXRpbmdfYW5fYXJ0aWZhY3Rfd2l0aF9hX2JhY2tlbmRfaW5fY3NoYXJwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYV9zeXN0ZW1fdGhhdF9jYW5fZmluZF9hbl9hcnRpZmFjdF90ZW1wbGF0ZV9mb3JfY3NoYXJwIH0gZnJvbSAnLi9naXZlbi9hX3N5c3RlbV90aGF0X2Nhbl9maW5kX2FuX2FydGlmYWN0X3RlbXBsYXRlX2Zvcl9jc2hhcnAnO1xuZGVzY3JpYmUoJ3doZW5fY3JlYXRpbmdfYW5fYXJ0aWZhY3Rfd2l0aF9hX2NvcmVfaW5fY3NoYXJwJywgKCkgPT4ge1xuICAgIGxldCBjb250ZXh0ID0gbmV3IGFfc3lzdGVtX3RoYXRfY2FuX2ZpbmRfYW5fYXJ0aWZhY3RfdGVtcGxhdGVfZm9yX2NzaGFycCgpO1xuICAgIGNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbiAgICAoYmVmb3JlRWFjaCA9PiB7XG4gICAgICAgIGNvbnRleHQuYXJ0aWZhY3RzTWFuYWdlci5jcmVhdGVBcnRpZmFjdChjb250ZXh0LmNvbnRleHQpO1xuICAgIH0pKCk7XG4gICAgXG4gICAgaXQoJ3Nob3VsZCB0cnkgZ2V0dGluZyBib3VuZGVkIGNvbnRleHQgY29uZmlndXJhdGlvbiBmcm9tIHRoZSBjb3JyZWN0IHN0YXJ0IHBhdGgnLCAoKSA9PiBjb250ZXh0LmJvdW5kZWRDb250ZXh0TWFuYWdlci5nZXROZWFyZXN0Qm91bmRlZENvbnRleHRDb25maWcuc2hvdWxkLmJlLmNhbGxlZFdpdGgoY29udGV4dC5jb250ZXh0LmRlc3RpbmF0aW9uKSk7XG4gICAgaXQoJ3Nob3VsZCB0cnkgZ2V0dGluZyBhbiBhcnRpZmFjdHMgYm9pbGVyIHBsYXRlIGZvciBjc2hhcnAnLCAoKSA9PiBjb250ZXh0LmJvaWxlclBsYXRlc01hbmFnZXIuYm9pbGVyUGxhdGVzQnlMYW5ndWFnZUFuZFR5cGUuc2hvdWxkLmJlLmNhbGxlZFdpdGgoY29udGV4dC5ib2lsZXJQbGF0ZUxhbmd1YWdlLCBjb250ZXh0LmJvaWxlclBsYXRlVHlwZSkpO1xuICAgIGl0KCdzaG91bGQgdHJ5IHNlYXJjaGluZyB0aGUgZmlsZSBzeXN0ZW0gZnJvbSB0aGUgbG9jYXRpb24gc3BlY2lmaWVkIGluIHRoZSBib2lsZXJwbGF0ZScsICgpID0+IGNvbnRleHQuZm9sZGVycy5zZWFyY2hSZWN1cnNpdmUuc2hvdWxkLmJlLmNhbGxlZFdpdGgoY29udGV4dC5ib2lsZXJQbGF0ZUxvY2F0aW9uKSk7XG4gICAgaXQoJ3Nob3VsZCB0cnkgcmVhZGluZyB0aGUgZmlsZSBzeXN0ZW0gZnJvbSB0aGUgbG9jYXRpb24gb2YgdGhlIHRlbXBsYXRlIGZpbGUnLCAoKSA9PiBjb250ZXh0LmZpbGVTeXN0ZW0ucmVhZEZpbGVTeW5jLnNob3VsZC5iZS5jYWxsZWRXaXRoKHBhdGguam9pbihjb250ZXh0LnRlbXBsYXRlRmlsZUxvY2F0aW9uLCAndGVtcGxhdGUuanNvbicpKSk7XG4gICAgaXQoJ3Nob3VsZCBjYWxsIHRoZSBpbnF1aXJlciB0byBwcm9tcHQgdGhlIHVzZXIgZ2l2ZW4gdGhlIGNvcnJlY3QgaW5mb3JtYXRpb24nLCAoKSA9PiBjb250ZXh0LmlucXVpcmVyTWFuYWdlci5wcm9tcHRVc2VyLnNob3VsZC5iZS5jYWxsZWRXaXRoKGNvbnRleHQuY29udGV4dC5hcnRpZmFjdE5hbWUsIGNvbnRleHQuY29udGV4dC5kZXN0aW5hdGlvbiwgY29udGV4dC5ib2lsZXJQbGF0ZSwgSlNPTi5wYXJzZShjb250ZXh0LmFydGlmYWN0VGVtcGxhdGVKc29uKSkpO1xufSk7Il19